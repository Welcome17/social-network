import React from 'react';
import s from './MyPosts.module.css';
import Post from "./Post/Post";

const MyPosts = React.memo( (props) => { //React.memo - это High Order Component (HOC), которая проверяет произошли ли какие-то изменения и нужно ли перересовывать компоненту. Задача React.memo - уменишьсь кол-во ненужных перересовок.

    let postsElements =
        [...props.posts]
            .reverse()
            .map ( p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>); /*метод map - это страндартный метод любого массива. Он перебирает все данные массива и изменяет их по заданному шаблону. Метод map принимает значение стрелочной функции с передаваемым в нее параметром. Передававемым параметром является Элемент изменяемого массива. Т.е., обращаесь в передаваемой переменной ты образается к каждому элементу изменяемого массива. В теле функции прописываем что должны получить в результате для каждого 1-го элемента массива.*/
   // метод reverse переворачивает порядок данных в объекте. Но этот метод изменяет не только выдачу, но и сам объект, т.е. если применить reverse на без предварительного копирования props, то у нас перевернется порядок в state, и при кажой перезагрузке будет опят ьпереворачиватсья в обратную сторону. ЧТобы этого ихбежать нужно делать локальную копию данных и ее изменять. При перезагрузке компонента опять поулчит данные из state, создастся локальная копию в оригиналньом порядке, а reverse перевернет ее


    return (

            <div className={s.posts}>
                { postsElements }
            </div>



    )
})

export default MyPosts;
